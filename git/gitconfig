[alias]
  clean-branches = "!f() { git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done }; f"
  pr-develop = "!f() { pr=$(az repos pr create --target-branch develop); prId=$(echo $pr | sed 's/\\(.*\\)pullRequestId.*: \\([0-9]*\\),.*/\\2/'); echo $prId; }; f"
  pr-master = "!f() { pr=$(az repos pr create --target-branch master); prId=$(echo $pr | sed 's/\\(.*\\)pullRequestId.*: \\([0-9]*\\),.*/\\2/'); echo $prId; }; f"
  co = "checkout"
  cob = "checkout -b"
  gco = "!f() { git checkout $(git branch | grep $1 | head -n 1); }; f"
  fco = "!f() { git checkout $(git branch | sed 's/*/ /g' | fzf); }; f"
  cb = "!f() { git clean-branches; }; f"
  b = "branch"
  s = "stash"
  p = "!f() { git push -u origin $(git rev-parse --abbrev-ref HEAD); }; f"
  aa = "add --all"
  cm = "commit -m"
  bsc = "branch --show-current"
  m = "!f() { git checkout $1 && git pull; git checkout @{-1} && git merge $1; }; f"
  cu = "branch --show-current"
[credential]
  helper = store
[include]
  path = ~/.config/git/gitconfig_local
[difftool]
  prompt = true
[diff]
  tool = nvimdiff
[difftool "nvimdiff"]
  cmd = "nvim -Md \"$LOCAL\" \"$REMOTE\""
